@implements IDisposable
@inject ICartItemWebService cartWebService

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">APIforPI.Web</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Меню
            </NavLink>
        </div>
       
        <div class="nav-item px-3 d-sm-none">
            <NavLink class="nav-link" href="Cart">
                <span class="oi oi-basket" aria-hidden="true"></span> Корзина (<b>@shoppingCartTotalPrice</b>)
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Creation">
                <span class="oi oi-star" aria-hidden="true"></span> Добавить продукт
            </NavLink>
        </div>
         
       
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private string shoppingCartTotalPrice = "";

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override void OnInitialized()
    {
        cartWebService.CartChanged += UserCartChanged;
    }
    private void UserCartChanged(string totalPrice)
    {
        shoppingCartTotalPrice = totalPrice;
        StateHasChanged();
    }
    void IDisposable.Dispose()
    {
        cartWebService.CartChanged -= UserCartChanged;
    }
}
